@page "/cart"
@using DayEaseServices.Services.IServices
@using Domain.RequestModels
@inject ICartService cartService
@layout NavMenu
<style>
    .cart-wrapper {
    /* padding: 1rem; */
    background-color: #f0f8ff; /* sky blue tone */
    }

    .cart-header {
    font-weight: bold;
    font-size: 1.5rem;
    margin-bottom: 1rem;
    text-align: center;
    }

    .cart-item {
    background: #fff;
    display: flex;
    padding: 12px;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.04);
    margin-bottom: 16px;
    gap: 1px;
    align-items: center;
    }

    .cart-image {
    width: 60px;
    height: 60px;
    object-fit: contain;
    border-radius: 8px;
    background: #f9f9f9;
    }

    .cart-details {
    flex: 1;
    }

    .product-title {
    font-weight: 600;
    font-size: 16px;
    }

    .product-quantity {
    font-size: 13px;
    color: #555;
    margin-bottom: 4px;
    }

    .price-and-qty {
    display: flex;
    justify-content: space-between;
    align-items: center;
    }

    .price .discounted {
    font-weight: 600;
    color: green;
    font-size: 16px;
    margin-right: 8px;
    }

    .price .original {
    text-decoration: line-through;
    color: #aaa;
    font-size: 14px;
    }

    .qty-control {
    background: #fff0f5;
    padding: 4px 12px;
    border-radius: 20px;
    display: flex;
    align-items: center;
    gap: 8px;
    }

    .qty-btn {
    background: #fff;
    border: 1px solid #ff3c6f;
    color: #ff3c6f;
    border-radius: 50%;
    width: 28px;
    height: 28px;
    font-weight: bold;
    font-size: 16px;
    }

    .checkout-bar {
    background: white;
    padding: 1rem;
    position: sticky;
    bottom: 0;
    box-shadow: 0 -2px 8px rgba(0,0,0,0.05);
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 99;
    }

    .btn-select {
    background-color: #ff3c6f;
    color: white;
    border: none;
    padding: 10px 20px;
    font-weight: bold;
    border-radius: 10px;
    }

    .checkout-footer {
    position: sticky;
    bottom: 0;
    width: 100%;
    background-color: #fff;
    box-shadow: 0 -2px 6px rgba(0,0,0,0.05);
    padding: 16px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    z-index: 10;
    }

    .subtotal-bar {
    font-size: 16px;
    font-weight: 600;
    text-align: center;
    }

    .btn-checkout {
    background-color: #ff3c6f;
    color: white;
    border: none;
    font-weight: bold;
    padding: 12px;
    width: 100%;
    border-radius: 8px;
    font-size: 16px;
    cursor: pointer;
    }

    .btn-clear {
    background-color: #f0f0f0;
    border: none;
    padding: 6px 12px;
    font-size: 14px;
    border-radius: 6px;
    cursor: pointer;
    font-weight: 500;
    }

    .btn-remove {
    background: transparent;
    border: none;
    font-size: 20px;
    color: #cc0000;
    cursor: pointer;
    }

    .btn-remove:hover {
    color: #ff0000;
    }

    .text-muted {
    color: #777;
    }

    .cart-item {
    display: flex;
    background: #fff;
    padding: 12px;
    margin-bottom: 16px;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .cart-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    margin-right: 12px;
    border-radius: 8px;
    }

    .cart-details {
    flex: 1;
    }

    .product-title {
    font-weight: bold;
    font-size: 16px;
    margin-bottom: 2px;
    }

    .product-quantity {
    font-size: 13px;
    color: #555;
    margin-bottom: 4px;
    }

    .price-info {
    font-size: 14px;
    margin-bottom: 4px;
    }

    .price-final {
    font-weight: 600;
    color: #000;
    }

    .original {
    text-decoration: line-through;
    color: #999;
    margin-left: 8px;
    }

    .availability {
    font-size: 13px;
    color: green;
    }

    .return-info {
    font-size: 12px;
    color: #0066c0;
    margin-bottom: 8px;
    }

    .qty-block {
    display: flex;
    align-items: center;
    border: 2px solid #ffd814;
    border-radius: 25px;
    padding: 4px 12px;
    margin-right: 12px;
    background-color: #fff9d0;
    }

    .qty-icon {
    background: transparent;
    border: none;
    font-size: 18px;
    padding: 4px;
    font-weight: bold;
    cursor: pointer;
    }

    .qty-icon.danger {
    color: #cc0000;
    }

    .qty-text {
    font-size: 14px;
    padding: 0 8px;
    font-weight: 600;
    }

    .action-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 10px;
    flex-wrap: wrap;
    }

    .btn-action {
    background-color: #f0f0f0;
    border: 1px solid #ccc;
    padding: 4px 12px;
    margin: 2px;
    font-size: 14px;
    border-radius: 6px;
    cursor: pointer;
    }

    .checkout-footer {
    position: sticky;
    bottom: 0;
    width: 100%;
    background-color: #fff;
    padding: 16px;
    box-shadow: 0 -2px 5px rgba(0,0,0,0.05);
    display: flex;
    flex-direction: column;
    gap: 10px;
    }

    .btn-checkout {
    background-color: #ffd814;
    color: #111;
    font-weight: bold;
    border: none;
    padding: 12px;
    font-size: 16px;
    border-radius: 6px;
    cursor: pointer;
    }

    .cart-item {
    display: flex;
    background: #fff;
    padding: 12px;
    margin-bottom: 16px;
    border-radius: 10px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    .cart-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 8px;
    margin-right: 12px;
    }

    .cart-details {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    }

    .product-info {
    margin-bottom: 4px;
    }

    .product
    .cart-item {
    display: flex;
    background: #fff;
    padding: 12px;
    margin-bottom: 16px;
    border-radius: 10px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    .cart-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 8px;
    margin-right: 12px;
    }

    .cart-details {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 6px;
    }

    .product-title {
    font-weight: 600;
    font-size: 15px;
    }

    .product-quantity {
    font-size: 13px;
    color: #666;
    }

    .price {
    font-size: 14px;
    }

    .price-final {
    color: green;
    font-weight: 600;
    }

    .original {
    text-decoration: line-through;
    color: #aaa;
    margin-left: 8px;
    }

    .qty-control {
    display: flex;
    align-items: center;
    gap: 8px;
    background-color: #fff0f3;
    padding: 6px 12px;
    border-radius: 25px;
    width: fit-content;
    border: 1px solid #ffd6d6;
    }

    .qty-btn {
    border: none;
    background: none;
    font-size: 18px;
    font-weight: bold;
    color: #ff3366;
    cursor: pointer;
    }

    .qty-count {
    font-size: 15px;
    font-weight: bold;
    width: 20px;
    text-align: center;
    }

    .btn-delete {
    background: none;
    color: #cc0000;
    font-size: 13px;
    border: none;
    cursor: pointer;
    align-self: flex-start;
    }

    .checkout-footer {
    position: sticky;
    bottom: 0;
    background: #fff;
    padding: 16px;
    box-shadow: 0 -2px 6px rgba(0,0,0,0.05);
    }

    .btn-checkout {
    width: 100%;
    background-color: #ff3366;
    color: white;
    padding: 12px;
    font-size: 16px;
    border: none;
    border-radius: 6px;
    font-weight: bold;
    }

    .cart-item-horizontal {
    display: flex;
    align-items: center;
    background: #fff;
    padding: 10px;
    border-bottom: 1px solid #eee;
    }

    .cart-image {
    width: 50px;
    height: 50px;
    object-fit: contain;
    margin-right: 10px;
    }

    .cart-info {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    }

    .product-title {
    font-weight: 600;
    font-size: 14px;
    color: #000;
    }

    .product-quantity {
    font-size: 12px;
    color: #777;
    }

    .cart-right {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 4px;
    }

    .qty-control {
    display: flex;
    align-items: center;
    background: #ffeef1;
    border: 1px solid #ffcfd6;
    border-radius: 25px;
    padding: 2px 8px;
    }

    .qty-btn {
    background: none;
    border: none;
    font-weight: bold;
    color: #ff3366;
    font-size: 18px;
    cursor: pointer;
    }

    .qty-count {
    font-size: 14px;
    font-weight: 600;
    margin: 0 6px;
    }

    .price-final {
    font-weight: 600;
    color: #28a745;
    font-size: 14px;
    }

    .original {
    font-size: 12px;
    text-decoration: line-through;
    color: #999;
    }

    .checkout-footer {
    background: #fff;
    padding: 16px;
    box-shadow: 0 -2px 6px rgba(0,0,0,0.05);
    }

    .btn-checkout {
    width: 100%;
    background-color: #ff3366;
    color: white;
    padding: 12px;
    font-size: 16px;
    border: none;
    border-radius: 6px;
    font-weight: bold;
    }

    .cart-item-horizontal {
    display: flex;
    align-items: flex-start;
    background: #fff;
    padding: 12px;
    border-bottom: 1px solid #eee;
    gap: 12px;
    }

    .cart-image {
    width: 50px;
    height: 50px;
    object-fit: contain;
    }

    .cart-info {
    flex: 1;
    }

    .product-title {
    font-weight: 600;
    font-size: 14px;
    margin-bottom: 4px;
    }

    .product-quantity {
    font-size: 12px;
    color: #777;
    }

    .cart-right {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 4px;
    }

    .price-qty-wrapper {
    display: flex;
    gap: 10px;
    align-items: center;
    }

    .qty-control {
    display: flex;
    align-items: center;
    background: #ffeef1;
    border: 1px solid #ffcfd6;
    border-radius: 25px;
    padding: 2px 10px;
    }

    .qty
    .delivery-timer {
    background-color: #e6f4ea;
    color: #0b8e2d;
    border-radius: 25px;
    padding: 8px 16px;
    font-weight: 600;
    display: inline-flex;
    align-items: center;
    gap: 8px;
    margin: 12px 0;
    font-size: 14px;
    width: fit-content;
    }

    .timer-icon {
    font-size: 18px;
    }

    .subtotal-bar {
    display: flex;
    flex-direction: column;
    gap: 4px;
    font-size: 14px;
    }

    .original-total {
    color: #555;
    }

    .savings {
    color: #0b8e2d;
    font-weight: 600;
    }

</style>
<div class="cart-wrapper">
    <div class="cart-header d-flex justify-content-between align-items-center">
        <h3>🛒 Your Cart</h3>
        <button class="btn-clear" @onclick="ClearCart">🧹 Clear Cart</button>
    </div>

    <div class="delivery-timer">
        <span class="timer-icon">⏱️</span>
        <span>Delivery in 15 mins</span>
    </div>

    @if (cartItems.Any())
    {
        @foreach (var item in cartItems)
        {
            <div class="cart-item-horizontal">
                <!-- If you don't have image, you can skip this line or add a placeholder -->
                <img src="placeholder.jpg" alt="@item.ProductImage" class="cart-image" />

                <div class="cart-info">
                    <div class="product-title">@item.ProductName</div>
                    <div class="product-quantity">Qty: @item.Quantity</div>
                </div>

                <div class="cart-right">
                    <div class="price-qty-wrapper">
                        @* <div class="qty-control"> *@
                        @*     <button class="qty-btn" @onclick="() => DecreaseQuantity(item)">−</button> *@
                        @*     <span class="qty-count">@item.Quantity</span> *@
                        @*     <button class="qty-btn" @onclick="() => IncreaseQuantity(item)">+</button> *@
                        @* </div> *@
                        <button class="qty-btn" @onclick="async () => await DecreaseQuantity(item)">−</button>
                        <span class="qty-count">@item.Quantity</span>
                        <button class="qty-btn" @onclick="async () => await IncreaseQuantity(item)">+</button>

                        <div class="price">
                            <span class="price-final">₹@item.TotalPrice</span>
                        </div>
                    </div>
                    <div><span class="original text-muted">₹@(item.Price * item.Quantity)</span></div>
                    @* <button class="btn-delete" @onclick="() => RemoveItem(item)">Remove</button> *@
                    <button class="btn-delete" @onclick="async () => await RemoveItem(item)">Remove</button>

                </div>
            </div>
        }

        <div class="checkout-footer">
            <div class="subtotal-bar">
                <div><strong>Subtotal:</strong> ₹@cartItems.Sum(i => i.TotalPrice)</div>
                <div class="savings">You Save: ₹@cartItems.Sum(i => (i.Price * i.Quantity) - i.TotalPrice)</div>
            </div>
            <button class="btn-checkout" @onclick="Checkout">Proceed to Checkout</button>
        </div>
    }
    else
    {
        <p class="text-muted text-center mt-5">🛍️ Your cart is empty.</p>
    }
</div>

@code {
    private List<CartModel> cartItems = new();

    protected override async Task OnInitializedAsync()
     {
        var request = new CartModel
            {
                UserId = "DEUS20250613062010"// Replace with actual user ID logic
            };

        var result = await cartService.GetCartItemsByUserId(request);

        if (result?.Count != null)
        {
            cartItems = result;
        }
    }

    // private void IncreaseQuantity(CartModel item)
    // {
    //     item.Quantity++;
    //     item.TotalPrice = item.Quantity * (item.Price - item.Discount);
    //     StateHasChanged();
    // }

    // private void DecreaseQuantity(CartModel item)
    // {
    //     if (item.Quantity > 1)
    //     {
    //         item.Quantity--;
    //         item.TotalPrice = item.Quantity * (item.Price - item.Discount);
    //         StateHasChanged();
    //     }
    // }
    private async Task IncreaseQuantity(CartModel item)
    {
        item.Quantity++;
        item.TotalPrice = item.Quantity * (item.Price - item.Discount);

        var response = await cartService.UpdateCartItems(item);

        if (response.Result != null)
        {
            StateHasChanged();
        }
        else
        {
            // Optionally show error message
            Console.WriteLine("Failed to update quantity.");
        }
    }

    private async Task DecreaseQuantity(CartModel item)
    {
        if (item.Quantity > 1)
        {
            item.Quantity--;
            item.TotalPrice = item.Quantity * (item.Price - item.Discount);

            var response = await cartService.UpdateCartItems(item);

            if (response.Result != null)
            {
                StateHasChanged();
            }
            else
            {
                Console.WriteLine("Failed to update quantity.");
            }
        }
    }

    // private void RemoveItem(CartModel item)
    // {
    //     cartItems.Remove(item);
    //     StateHasChanged();
    // }
    private async Task RemoveItem(CartModel item)
    {
        var response = await cartService.RemoveCartItems(item);

        if (response?.Result != null)
        {
            cartItems.Remove(item);
            StateHasChanged();
        }
        else
        {
            Console.WriteLine("Failed to remove item.");
        }
    }

    private void ClearCart()
    {
        cartItems.Clear();
        StateHasChanged();
    }

    private void Checkout()
    {
        // Add your checkout logic here
    }
}

    


@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@using DayEaseServices.Services.IServices
@using Domain.RequestModels
@inject ICartService CartService

<div class="top-bar">
    <div class="header-left">
        <button class="hamburger" @onclick="ToggleNavMenu">
            @* <img src="images/Logo-black.png" alt="Menu" class="logo-img" /> *@
            <i class="bi bi-list"></i>
        </button>
        @* <img src="images/Day-Ease-logo-black.png" alt="DayEase Logo" class="header-logo" /> *@
    </div>

    <div class="header-right">
        <!-- Cart Button -->
        <button class="icon-btn" @onclick="OpenCart">
            <div class="icon-wrapper">
                <i class="bi bi-cart3 cart-icon"></i>
                @if (CartService.CartItemCount > 0)
                {
                    <span class="cart-count">@CartService.CartItemCount</span>
                }
            </div>
        </button>

        <!-- Profile Button -->
        <button class="icon-btn" @onclick="OpenProfile">
            <div class="icon-wrapper">
                <i class="bi bi-person cart-icon"></i>
            </div>
        </button>
    </div>

</div>

<!-- Sidebar Overlay -->
<div class="sidebar-overlay @(collapseNavMenu ? "is-visible" : "")" @onclick="ToggleNavMenu"></div>

<!-- Sidebar Menu -->
<div class="sidebar-menu @(collapseNavMenu ? "is-open" : "")">

    <div class="sidebar-header">
        <img src="images/Day-Ease-logo-black.png" alt="DayEase Logo" class="sidebar-logo" />
    </div>
    <nav class="sidebar-nav">
        <NavLink class="nav-link border-bottom py-3 text-white" href="MyOrders" style="padding-left: 4rem;">
            <i class="bi bi-receipt me-2"></i> MyOrders
        </NavLink>
        <NavLink class="nav-link border-bottom py-3 text-white" href="/user-profile" style="padding-left: 4rem;">
            <i class="bi bi-person me-2"></i> Profile
        </NavLink>
        <NavLink class="nav-link border-bottom py-3 text-white" href="stores" style="padding-left: 4rem;">
            <i class="bi bi-shop me-2"></i> Stores
        </NavLink>
        <NavLink class="nav-link border-bottom py-3 text-white" href="support" style="padding-left: 4rem;">
            <i class="bi bi-headset me-2"></i> Support
        </NavLink>
        <NavLink class="nav-link border-bottom py-3 text-white" href="about-us" style="padding-left: 4rem;">
            <i class="bi bi-chat-dots"></i> About Us
        </NavLink>
        <NavLink class="nav-link border-bottom py-3 text-white" href="/wallet" style="padding-left: 4rem;">
            <i class="bi bi-wallet2 me-2"></i> Wallet
        </NavLink>

    
        <NavLink class="nav-link py-3 text-white" @onclick="ShowLogoutPopup" style="padding-left: 4rem;">
            <i class="bi bi-box-arrow-left me-2"></i> Logout
        </NavLink>
       
    </nav>
</div>

<!-- Main content area -->
<div class="content-area">
    @Body
</div>

@if (showLogoutPopup)
{

    <div class="modal-backdrop" @onclick="CancelLogout">
        <div class="modal-content" @onclick:stopPropagation="true">
            <button class="modal-close-icon" @onclick="CancelLogout" aria-label="Close">&times;</button>
            <h5>Confirm Logout</h5>
            <p>Are you sure you want to logout?</p>
            <div class="popup-button-row">
                <button class="cart-btn add-btn" @onclick="ConfirmLogout">Logout</button>
                <button class="cart-btn close-btn" @onclick="CancelLogout">Cancel</button>
            </div>
        </div>
    </div>
}

@code {
    private bool collapseNavMenu = false;
    private List<CartModel> cartItems = new();
    private bool showLogoutPopup = false;

    protected override async Task OnInitializedAsync()
    {
        var request = new CartModel
        {
            UserId = "DEUS20250708053403"// Replace with actual user ID logic
        };

        cartItems = await CartService.GetCartItemsByUserId(request);
        await CartService.LoadCartItemCountAsync(request);
    }
    protected override void OnInitialized()
    {
        CartService.OnChange += StateHasChanged;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void OpenCart()
    {
        NavigationManager.NavigateTo("/cart");
    }

    private void OpenProfile()
    {
        NavigationManager.NavigateTo("/user-profile");
    }

    public void Dispose()
    {
        CartService.OnChange -= StateHasChanged;
    }
    private void ShowLogoutPopup()
    {
        showLogoutPopup = true;
    }

    private void CancelLogout()
    {
        showLogoutPopup = false;
    }

    private void ConfirmLogout()
    {
        showLogoutPopup = false;
        NavigationManager.NavigateTo("/logout");
    }
}
